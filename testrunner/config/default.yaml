# The location information is passed on the the server
location:
  # The name of this location
  name: "default"
  # The type of tests that you can run
  setup:
    - name: "Desktop Browsers"
      type: "desktop"
      # If you do not use Docker, you need to make sure you 
      # install the browsers yourself
      browsers: ["chrome", "firefox", "edge"]
      connectivity: ["native", "3g", "4g", "cable"]
      # If you choose to run sitespeed.io docker containers make sure 
      # to run: sudo modprobe ifb numifbs=1 
      # on the host so that setting connectivity will work
      # Also remember that localhost inside the container isn't automatically
      # the same as localhost on the server:
      # https://www.sitespeed.io/documentation/sitespeed.io/docker/#access-localhost
      # That means if you run everything locally and want to use sitespeed.io docker 
      # containers, you need to set --s3.endpoint to something else than 127.0.0.1.
      # On Mac you can use --s3.endpoint http://host.docker.internal:9000 and on Linux
      # you can use your actual IP.
      useDocker: false
  
    - name: "Emulated Mobile"
      type: "emulatedMobile"
      browsers: ["chrome"]
      connectivity: ["native", "3g", "4g", "cable"]
      useDocker: false

    # Here's an example of setting up a Android phone
    #- name: "Android"
    #  type: "android"
    #  browsers: ["chrome", "firefox"]
    #  model: "Moto G5"
    #  deviceId: "ZY322MMFZ2"
    #  useDocker: false
    #  connectivity: ["native"]

# Where to connect to the message broker that is a Redis like thing
redis:
  port: null
  host: null
  password: jgsay7f2fgfgda6acCa7g()jaba51!
  tls: null
  
# Verbose log level or not
log:
  verbose: false

# The default sitespeed.io configuration file used by the sitespeed.io instance
# It will be merged by the server sitespeed.io config and what you add in the 
# cli or gui. If you use a Docker container, make sure to map a volume and use 
# the full path to the configuration file
# sitespeedioConfigFile:

# The working directory for the testrunner, where it temporary will put it files
# By default it used the os.tmpdir
# workingDirectory: "."

# The sitespeed.io executable. The default is a globally installed sitespeed.io
executable: "sitespeed.io"

# If you run sitespeed.io using Docker this is the container that is used.
# If you use the latest, make sure to docker pull the container once a day
# to get the latest version
# extraparameters will be passed on to Docker, between docker run and the container name
# baselineDddir is the directory that is mappedd where baseline data is stored
docker:
  container: "sitespeedio/sitespeed.io:latest"
  extraparameters: "--cap-add=NET_ADMIN"
  #baselinedir: "$(pwd)"

# The number of jobs to keep in the queue
# Depending on how many jobs you run and how much memory 
# you have on your Redis/KeyDb instance you can tune this
queue:
  removeOnComplete: 50
  removeOnFail: 50